global
  stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
  log stdout format raw local0 debug
#   lua-prepend-path /usr/share/haproxy/?/http.lua
  lua-load /usr/share/haproxy/http.lua
  lua-load /usr/share/haproxy/auth-request.lua

defaults
  mode http
  timeout client 10s
  timeout connect 5s
  timeout server 10s
  timeout http-request 10s
  log global
  option httplog
  log-format frontend:%f/%H/%fi:%fp\ client:%ci:%cp\ GMT:%T\ body:%[capture.req.hdr(0)]\ request:%r
  option dontlognull

frontend stats
  bind *:8404
  stats enable
  stats uri /
  stats refresh 10s

frontend myfrontend
  mode http
  bind :80
  log global
  option http-buffer-request

  http-request deny content-type 'text/html' string 'Missing Authorization HTTP header' unless { req.hdr(authorization) -m found }
  # get payload part of the JWT
  http-request set-var(txn.iss) http_auth_bearer,jwt_payload_query('$.iss')
  http-request set-var(txn.aud) http_auth_bearer,jwt_payload_query('$.aud')
  http-request set-var(txn.exp) http_auth_bearer,jwt_payload_query('$.exp','int')
  http-request set-var(txn.scope) http_auth_bearer,jwt_payload_query('$.scope')
  # http-request capture req.path id 0
  http-request set-var(txn.requestpath) str("app1")
  http-request set-var(txn.requestpath) str("app2"),lower if { path -m str /app2 }
  http-request set-var(txn.email) http_auth_bearer,jwt_payload_query('$.unique_name')
  http-request add-header "opa_email" %[http_auth_bearer,jwt_payload_query('$.unique_name')]
  http-request add-header "requestpath" %[http_auth_bearer,jwt_payload_query('$.unique_name')] if { path -m str /app1 }
  http-request add-header "requestpath" %[http_auth_bearer,jwt_payload_query('$.unique_name')] if { path -m str /app2 }
  http-request set-var(req.my_var) req.fhdr(user-agent),lower
  http-request set-var-fmt(txn.from) %[src]:%[src_port]
  http-request add-header "from" %[src]:%[src_port]

 # auth-intercept syntax:                                           (Headers to copy)
  #                               Backend name  Path         Method  Request  Success  Failure
  http-request lua.auth-intercept auth_request  /v1/data/authz POST    *        *        *
  http-request deny if ! { var(txn.auth_response_successful) -m bool }

  default_backend mybackend

backend auth_request
  mode http
  server auth_request opa:8181 check

backend mybackend
  server bundle_server google.com:80 check
